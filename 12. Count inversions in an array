#include <bits/stdc++.h>
long long ans=0;
void merge(long long *arr, int low,int high,int mid){
    vector<int>b;
    int k=0;
    int i=low,h=mid+1;
    while(i<=mid&&h<=high){
        if(arr[i]<=arr[h]) b.push_back(arr[i++]);
        else if (arr[i] > arr[h]) {
          ans +=(mid-i)+1;
          b.push_back(arr[h++]);
        }
    }
    while(i<=mid) b.push_back(arr[i++]);
    while(h<=high) b.push_back(arr[h++]);
    for(int i=low;i<=high;i++)
    arr[i]=b[i-low];
    
}
void ms(long long *arr, int low,int high){
    int mid=(low+high)>>1;
    if(low<high){
        ms(arr,low,mid);
        ms(arr,mid+1,high);
        merge(arr,low,high,mid);
    }
} 
long long getInversions(long long *arr, int n){
    // Write your code here.
    ms(arr,0,n-1);
    return ans;
}
